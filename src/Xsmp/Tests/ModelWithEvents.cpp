// Copyright 2023 THALES ALENIA SPACE FRANCE. All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// -----------------------------------------------------------------------------
// File Name    : ModelWithEvents.cpp
// Generated by : XsmpSdkGenerator-${qualifiedVersion}
// -----------------------------------------------------------------------------
/// @file Xsmp/Tests/ModelWithEvents.cpp

// ----------------------------------------------------------------------------
// ---------------------------- Include Header Files --------------------
// ----------------------------------------------------------------------------

#include "Smp/IPublication.h"
#include "Xsmp/ComponentHelper.h"
#include "Xsmp/EventSink.h"
#include "Xsmp/Tests/ModelWithEvents.h"

namespace Xsmp {
namespace Tests {
void ModelWithEvents::DoPublish(::Smp::IPublication *receiver) {
}

void ModelWithEvents::DoConfigure(::Smp::Services::ILogger *logger,
        ::Smp::Services::ILinkRegistry *linkRegistry) {
}

void ModelWithEvents::DoConnect(::Smp::ISimulator *simulator) {
}

void ModelWithEvents::DoDisconnect() {
}

void ModelWithEvents::_void_esi(::Smp::IObject *sender) {
    // TODO implement EventSink void_esi
}
void ModelWithEvents::_bool_esi(::Smp::IObject *sender, ::Smp::Bool value) {
    // TODO implement EventSink bool_esi
}
void ModelWithEvents::_char8_esi(::Smp::IObject *sender, ::Smp::Char8 value) {
    // TODO implement EventSink char8_esi
}
void ModelWithEvents::_dateTime_esi(::Smp::IObject *sender,
        ::Smp::DateTime value) {
    // TODO implement EventSink dateTime_esi
}
void ModelWithEvents::_duration_esi(::Smp::IObject *sender,
        ::Smp::Duration value) {
    // TODO implement EventSink duration_esi
}
void ModelWithEvents::_float32_esi(::Smp::IObject *sender,
        ::Smp::Float32 value) {
    // TODO implement EventSink float32_esi
}
void ModelWithEvents::_float64_esi(::Smp::IObject *sender,
        ::Smp::Float64 value) {
    // TODO implement EventSink float64_esi
}
void ModelWithEvents::_int16_esi(::Smp::IObject *sender, ::Smp::Int16 value) {
    // TODO implement EventSink int16_esi
}
void ModelWithEvents::_int32_esi(::Smp::IObject *sender, ::Smp::Int32 value) {
    // TODO implement EventSink int32_esi
}
void ModelWithEvents::_int64_esi(::Smp::IObject *sender, ::Smp::Int64 value) {
    // TODO implement EventSink int64_esi
}
void ModelWithEvents::_int8_esi(::Smp::IObject *sender, ::Smp::Int8 value) {
    // TODO implement EventSink int8_esi
}
void ModelWithEvents::_string8_esi(::Smp::IObject *sender,
        ::Smp::String8 value) {
    // TODO implement EventSink string8_esi
}
void ModelWithEvents::_uint16_esi(::Smp::IObject *sender, ::Smp::UInt16 value) {
    // TODO implement EventSink uint16_esi
}
void ModelWithEvents::_uint32_esi(::Smp::IObject *sender, ::Smp::UInt32 value) {
    // TODO implement EventSink uint32_esi
}
void ModelWithEvents::_uint64_esi(::Smp::IObject *sender, ::Smp::UInt64 value) {
    // TODO implement EventSink uint64_esi
}
void ModelWithEvents::_uint8_esi(::Smp::IObject *sender, ::Smp::UInt8 value) {
    // TODO implement EventSink uint8_esi
}
} // namespace Tests
} // namespace Xsmp

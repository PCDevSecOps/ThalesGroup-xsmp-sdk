# Configuration file for XsmpLogger

#create the loggers: comma separated list of names
#e.g:
#log.rootLogger=name1,name2
#
#for each logger configure the appender kind: ConsoleAppender or FileAppender
#e.g:
#log.appender.name1=ConsoleAppender

# Supported Layouts: SimpleLayout and PatternLayout


# For ConvertionPattern the following conversion specifiers are available:
# 	%p	Writes the Path of the sender IObject
# 	%k	Writes the message kind name
# 	%m	Writes the message
# 	%d	Writes the Time of the msg (MJD2000 +0.5)
# %S	Writes the Simulation Time
# %E	Writes the Epoch Time
# %M	Writes the Mission Time
# %n	Writes a newline character
# %t    Writes a tab character
# %%	Writes a literal % character
#
# The date conversion specifiers (%d, %S, %E and %M) may be followed by a date format specifier
# enclosed between braces. For example %d{%F %T} or %S{%F}
# The date format specifier is described in https://en.cppreference.com/w/cpp/chrono/duration/formatter
# If no no date format specifier is given, then nanoseconds format is assumed



# Initialize the root logger
log.rootLogger=stdout,fout,

# add a ConsoleAppender to the logger stdout
log.appender.stdout=ConsoleAppender
log.appender.stdout.layout=PatternLayout
log.appender.stdout.layout.conversionPattern=%S{%T}%t%p%t%k%t%m%n
log.appender.stdout.levels=Error,Warning


# add a FileAppender to the logger
log.appender.fout=FileAppender
# path of the output log file
log.appender.fout.File=simulator.log
log.appender.fout.layout=PatternLayout
log.appender.fout.layout.conversionPattern=%d{%F %T}%t%S{%T}%t%E{%F %T}%t%M{%T}%t%p%t%k%t%m%n
#log.appender.fout.levels=Debug
#filter logs with path regex as specified in https://en.cppreference.com/w/cpp/regex/ecmascript
#log.appender.fout.path=/.*